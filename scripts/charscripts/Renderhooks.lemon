global u8 Char_num = 3

function void LoadChar3palette()
{
	u32 offset = Char_num * 0x40
	u32 source = 0x802180 + offset
	u32 dest   = 0x802000 + offset
	zeroMemory(dest, 0x40)
	u16 numColors = System.loadExternalPaletteData(getCharacterPaletteKey(Char_num), 0, 0x800000, 0x20)
	for (u16 i = 0; i < numColors; ++i)
	{
		u32 rgba = u32[0x800000 + i * 4]
		u16[dest + i * 2] = (rgba & 0xff000000) ? packColorExt(rgba) : 0
	}
}

function bool Standalone.onWriteToSpriteTable(s16 px, s16 py, u16 renderQueue)
{
	u8 gameMode = global.game_mode & 0x7f
	bool prioFlag = (objA0.sprite_attributes & 0x8000) != 0
	u64 key
	u64 paletteKey
	u8 atex
	u8 flags = ((objA0.render_flags & 0x01) ? SPRITE_FLAG_FLIP_X : 0) | ((objA0.render_flags & 0x02) ? SPRITE_FLAG_FLIP_Y : 0) | ((objA0.sprite_attributes & 0x8000) ? SPRITE_FLAG_PRIO : 0)
	if (objA0.update_address == 0x00d30c || objA0.update_address == 0x00d42c)
	{
		if (objA0.animation.sprite == 5 && objA0.animation.timer == 1)
		{
			atex = 0x40 + Char_num * 0x20
			key = "dataSel_slot1"
			LoadChar3palette()

			if (Renderer.hasCustomSprite(key))
				Renderer.drawCustomSprite(key, px - 0x0f, py-0x25, atex, SPRITE_FLAG_PRIO, 0xffff)
		}
	}
	if (XtraChar == 1)
	{
		if (gameMode == 0x48 || gameMode == 0x0c)	// Blue Spheres results + fade to main game afterwards
		{
			// CHARACTERS TEXT
			if (objA0.update_address == 0x02ea50 || objA0.update_address == 0x02ec1e || objA0.update_address == 0x02dd98)
			{	
				if (objA0.animation.sprite == 0x13) // Surge
				{
					Renderer.drawCustomSprite("surge_text", px, py, 0x00, SPRITE_FLAG_PRIO, renderQueue)
					return true
				}

				// if (objA0.animation.sprite == 0x12)
				// {
				// 	if (global.super_emeralds == 7) // HYPER
				// 	{
				// 		Renderer.drawCustomSprite("Hyper_text", px, py, 0x00, SPRITE_FLAG_PRIO, renderQueue)
				// 		return true
				// 	}
				// 	else // SUPER
				// 	{
				// 		Renderer.drawCustomSprite("Super_text", px, py, 0x00, SPRITE_FLAG_PRIO, renderQueue)
				// 		return true
				// 	}
				// }	
			}
		}
	}
	return base.Standalone.onWriteToSpriteTable(px, py, renderQueue)
}
//Palette selectiglobal u8 surge.palette
//Palette selection for Mighty
//SET THE PALETTE -- REGULAR GAME HAS ITS OWN ENTRY
function string getCharacterPaletteKey(u8 character)
{
	if ((XtraChar == 1 && character == CHARACTER_SONIC) || character == 3)
	{
		return stringformat("surge_%02x", surge.palette)
	}
    return base.getCharacterPaletteKey(character)
}

function bool Standalone.onDrawVdpSpriteCompound(s16 px, s16 py, u8 size, u16 index, u16 renderQueue, u8 spriteCounter)
{
    if (objA0.update_address == 0x00d30c || objA0.update_address == 0x00d42c)
    {
        if (index == 0xab0b || index == 0xab17)    //Sonic icon
        {
            if (objA0.animation.sprite == 5 && objA0.animation.timer == 1)
            {
                u64 key = "dataSel_slot1"
                if (Renderer.hasCustomSprite(key))
                {
                    return true
                }
            }
        }
    }
   
    return base.Standalone.onDrawVdpSpriteCompound(px, py, size, index, renderQueue, spriteCounter)
}
//# address-hook(0x009ea0) end(0x009eba)
function void fn009ea0()
{
#if STANDALONE
	{
		bluespheres.blue_remaining = 1
		return
	}
#endif

	// Count the number of blue spheres
	A3 = 0xfffff100
	D1 = 0
	D0.u16 = 0x03ff
	while (D0.s16 >= 0)
	{
		if (u8[A3] == 2)
		{
			++D1.u16
		}
		++A3
		--D0.s16
	}
	bluespheres.blue_remaining = D1.u16
}